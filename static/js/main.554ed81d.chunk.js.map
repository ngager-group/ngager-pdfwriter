{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["this","handleOnReceivedMessage","bind","fileName","host","path","value","type","item","direction","icon","style","options","image","text","newContent","_replace","_split","str","array","maxCount","i","open","normalText","boldText","close","event","data","document","window","url","a","html2canvas","require","randomScalingFactor","Math","floor","random","labels","datasets","label","backgroundColor","borderColor","borderWidth","layout","padding","Object","assign","left","right","top","bottom","text2","App","pdf","Pdf","setFilename","setHost","addText","fontSize","color","addIcon","moveUp","indent","chart","canvas","dataUrl","toDataURL","addImage","console","log","save","display","margin","flexDirection","maxWidth","dangerouslySetInnerHTML","__html","paddingRight","className","ref","el","flex","maxHeight","marginBottom","height","cornerRadius","maintainAspectRatio","legend","scales","xAxes","barThickness","gridLines","offsetGridLines","stacked","yAxes","barPercentage","categoryPercentage","ticks","suggestedMin","suggestedMax","callback","onClick","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.554ed81d.chunk.js","sourcesContent":["/* eslint-disabled: 1 */\n/* eslint class-methods-use-this: 0 */\n/* eslint new-parens: 0 */\n/* eslint semi: [\"error\", \"always\"] */\n// import jsPDF from 'jspdf';\n// import _isNumber from 'lodash/isNumber';\nimport _replace from 'lodash/replace';\nimport _split from 'lodash/split';\n\nclass Pdf {\n  constructor() {\n    this.fileName = 'untitled.pdf';\n    this.host = 'https://nclong87.github.io';\n    this.path = '/pdfwriter';\n    this.data = [];\n    this.handleOnReceivedMessage = this.handleOnReceivedMessage.bind(this);\n  }\n  setFilename(fileName) {\n    this.fileName = fileName;\n  }\n  setHost(host) {\n    this.host = host;\n  }\n  setPath(path) {\n    this.path = path;\n  }\n\n  moveUp(value = 1) {\n    this.data.push({\n      type: 'move',\n      item: { direction: 'up', value }\n    });\n  }\n\n  moveDown(value = 1) {\n    this.data.push({\n      type: 'move',\n      item: { direction: 'down', value }\n    });\n  }\n\n  addIcon(icon, style = null, options = null) {\n    this.data.push({\n      type: 'icon',\n      item: { icon, style, options }\n    });\n  }\n\n  addImage(image, options = {}) {\n    this.data.push({\n      type: 'image',\n      item: { image, options }\n    });\n  }\n\n  addText(text, style = null, options = null) {\n    const newContent = _replace(text, '<br/>', '<br>');\n    _split(newContent, '<br>').forEach(str => {\n      if (str.length === 0) {\n        this.data.push({\n          type: 'text',\n          item: { text: ' ', style, options }\n        });\n        return;\n      }\n      // console.log('str', str);\n      if (str.includes('<b>')) {\n        // console.log(str);\n        const array = [];\n        let maxCount = 0;\n        for (let i = 0; i < str.length; i++) {\n          // console.log('maxCount', maxCount);\n          if (maxCount > 30) {\n            break;\n          }\n          maxCount += 1;\n          const open = str.indexOf('<b>', i);\n          if (open >= 0) {\n            const normalText = str.substr(i, open - i);\n            let boldText;\n            i = open + 3;\n            const close = str.indexOf('</b>', i);\n            if (close > i) {\n              boldText = str.substr(i, close - i);\n              i = close + 3;\n            } else {\n              boldText = str.substr(i);\n              i = str.length;\n            }\n            array.push({\n              text: normalText,\n              type: 'n'\n            });\n            array.push({\n              text: boldText,\n              type: 'b'\n            });\n          } else {\n            const normalText = str.substr(i);\n            i = str.length;\n            array.push({\n              text: normalText,\n              type: 'n'\n            });\n          }\n          // break;\n        }\n        this.data.push({\n          type: 'formatted-text',\n          item: { text: array, style, options }\n        });\n      } else {\n        this.data.push({\n          type: 'text',\n          item: { text: str, style, options }\n        });\n      }\n    });\n  }\n\n  handleOnReceivedMessage(event) {\n    // console.log(event);\n    if (event.data && event.data.type) {\n      if (event.data.type === 'ready') {\n        const data = {\n          data: this.data,\n          fileName: this.fileName\n        };\n        // console.log('data', data);\n        this.iframe.contentWindow.postMessage(data, '*');\n      } else if (event.data.type === 'finish') {\n        // console.log(event.data.data);\n        document.body.removeChild(this.iframe);\n        window.removeEventListener('message', this.handleOnReceivedMessage, false);\n        const url = window.URL.createObjectURL(event.data.data);\n        var a = document.createElement('a');\n        document.body.appendChild(a);\n        a.style = 'display: none';\n        a.href = url;\n        a.download = this.fileName || 'untitled.pdf';\n        a.click();\n        window.URL.revokeObjectURL(url);\n      }\n    }\n  }\n\n  save() {\n    const { host, path } = this;\n    this.iframe = document.createElement('iframe');\n    this.iframe.style = 'border:0 ;position: fixed;left: 0;top: 0;z-index: 9999;cursor: wait;background-color: #fff;opacity: 0.5;';\n    this.iframe.width = '100%';\n    this.iframe.height = '100%';\n    this.iframe.src = `${host}${path}`;\n    document.body.appendChild(this.iframe);\n    window.addEventListener('message', this.handleOnReceivedMessage);\n  }\n}\n\nexport default Pdf;\n","import React, { Component } from 'react'\nimport { Bar } from 'react-chartjs-2'\n\nimport Pdf from 'ngager-pdfwriter'\n\nconst html2canvas = require('html2canvas');\n\nfunction randomScalingFactor() {\n  return Math.floor(Math.random() * 100);\n}\n\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'Dataset 1',\n    backgroundColor: 'rgba(255, 99, 132, 0.5)',\n    borderColor: 'rgb(255, 99, 132)',\n    borderWidth: 1,\n    data: [\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor()\n    ]\n  }, {\n    label: 'Dataset 2',\n    backgroundColor: 'rgba(255, 159, 64, 0.5)',\n    borderColor: 'rgb(255, 159, 64)',\n    borderWidth: 1,\n    data: [\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor()\n    ]\n  }]\n};\nconst layout = {\n  padding: Object.assign(\n    {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }\n  )\n};\n\nconst text = '3. <b>Consultation Services</b>: The Recruitment team provides <b>consultation on </b>new and replacement positions - hiring  –  process, salary<b> range, </b> hehehe<br><br>   <b>availability, possible</b> challenges/risks and strategies <br>to close the roles.<br>Hahaha';\n\nconst text2 = 'The man who knows his worth respects his fellow man because he respects himself first. He does not boast; is not self-seeking; nor does he force his personal opinion on others.';\n\nexport default class App extends Component {\n  async onClick() {\n    // console.log('onClick', this.props);\n    const pdf = new Pdf();\n    pdf.setFilename('test.pdf');\n    pdf.setHost('http://localhost')\n    try {\n      pdf.addText(text, { fontSize: 12, color: '#BBBBBB' });\n      pdf.addText(' ');\n      pdf.addIcon('', { color: '#BBBBBB' });\n      pdf.moveUp();\n      pdf.addText(text2, null, { indent: 16 });\n      pdf.addText(' ');\n      const canvas = await html2canvas(this.chart);\n      const dataUrl = canvas.toDataURL();\n      // const dataUrl = await domtoimage.toPng(this.chart);\n      pdf.addImage(dataUrl);\n    } catch (e) {\n      console.log('ERROR', e);\n    }\n    pdf.save();\n  }\n\n  render () {\n    return (\n      <div style={{ display: 'flex', margin: 'auto', flexDirection: 'column', maxWidth: 700 }}>\n        <p style={{ color: '#BBBBBB' }} dangerouslySetInnerHTML={{ __html: text }} />\n        <p>\n          <i style={{ paddingRight: 6, color: '#BBBBBB' }} className='fas fa-quote-left'></i>\n           {text2}\n        </p>\n        <div\n          ref={el => {\n              this.chart = el || this.chart;\n            }}\n          style={{ display: 'flex', flex: 1, maxHeight: 400, marginBottom: 50 }}\n        >\n          <Bar\n            data={data}\n            height={400}\n            options={{\n              cornerRadius: 0,\n              layout,\n              maintainAspectRatio: false,\n              legend: {\n                display: false\n              },\n              scales: {\n                xAxes: [\n                  Object.assign(\n                    {\n                      barThickness: 40,\n                      gridLines: {\n                        display: false,\n                        offsetGridLines: false\n                      },\n                      stacked: true\n                    }\n                  )\n                ],\n                yAxes: [\n                  Object.assign(\n                    {\n                      barPercentage: 0.9,\n                      categoryPercentage: 0.55,\n                      ticks: {\n                        suggestedMin: 0,\n                        suggestedMax: 100,\n                        callback: value => {\n                          if (value % 1 === 0) {\n                            return value;\n                          }\n                          return null;\n                        }\n                      }\n                    }\n                  )\n                ]\n              }\n            }}\n          />\n        </div>\n        <button onClick={() => this.onClick()}>Download PDF</button>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}