{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["this","handleOnReceivedMessage","bind","fileName","host","path","image","options","type","item","text","newContent","_replace","_split","str","array","i","open","normalText","boldText","close","event","console","data","document","window","url","a","domtoimage","require","randomScalingFactor","Math","floor","random","labels","datasets","label","backgroundColor","borderColor","borderWidth","layout","padding","Object","assign","left","right","top","bottom","App","log","props","pdf","Pdf","setFilename","addText","toPng","chart","dataUrl","addImage","save","style","display","margin","flexDirection","maxWidth","dangerouslySetInnerHTML","__html","ref","el","flex","maxHeight","marginBottom","height","cornerRadius","maintainAspectRatio","legend","scales","xAxes","barThickness","gridLines","offsetGridLines","stacked","yAxes","barPercentage","categoryPercentage","ticks","suggestedMin","suggestedMax","callback","value","onClick","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6cff5724.chunk.js","sourcesContent":["/* eslint-disabled: 1 */\n/* eslint class-methods-use-this: 0 */\n/* eslint new-parens: 0 */\n/* eslint semi: [\"error\", \"always\"] */\n// import jsPDF from 'jspdf';\n// import _isNumber from 'lodash/isNumber';\nimport _replace from 'lodash/replace';\nimport _split from 'lodash/split';\n\nclass Pdf {\n  constructor() {\n    this.fileName = 'untitled.pdf';\n    this.host = 'https://nclong87.github.io';\n    this.path = '/pdfwriter';\n    this.data = [];\n    this.handleOnReceivedMessage = this.handleOnReceivedMessage.bind(this);\n  }\n  setFilename(fileName) {\n    this.fileName = fileName;\n  }\n  setHost(host) {\n    this.host = host;\n  }\n  setPath(path) {\n    this.path = path;\n  }\n\n  addImage(image, options = {}) {\n    this.data.push({\n      type: 'image',\n      item: { image, options }\n    });\n  }\n\n  addText(text, options = {}) {\n    const newContent = _replace(text, '<br/>', '<br>');\n    _split(newContent, '<br>').forEach(str => {\n      if (str.length === 0) {\n        this.data.push({\n          type: 'text',\n          item: { text: ' ', options }\n        });\n        return;\n      }\n      // console.log('str', str);\n      if (str.includes('<b>')) {\n        // console.log(str);\n        const array = [];\n        for (let i = 0; i < str.length; i++) {\n          const open = str.indexOf('<b>', i);\n          if (open >= 0) {\n            const normalText = str.substr(i, open - i);\n            let boldText;\n            i = open + 3;\n            const close = str.indexOf('</b>', i);\n            if (close > i) {\n              boldText = str.substr(i, close - i);\n              i = close + 3;\n            } else {\n              boldText = str.substr(i);\n              i = str.length;\n            }\n            array.push({\n              text: normalText,\n              type: 'n'\n            });\n            array.push({\n              text: boldText,\n              type: 'b'\n            });\n          } else {\n            const normalText = str.substr(i);\n            i = str.length;\n            array.push({\n              text: normalText,\n              type: 'n'\n            });\n          }\n          // break;\n        }\n        this.data.push({\n          type: 'formatted-text',\n          item: { text: array, options }\n        });\n      } else {\n        this.data.push({\n          type: 'text',\n          item: { text: str, options }\n        });\n      }\n    });\n  }\n\n  handleOnReceivedMessage(event) {\n    console.log(event);\n    if (event.data && event.data.type) {\n      if (event.data.type === 'ready') {\n        const data = {\n          data: this.data,\n          fileName: this.fileName\n        };\n        this.iframe.contentWindow.postMessage(data, '*');\n      } else if (event.data.type === 'finish') {\n        // console.log(event.data.data);\n        document.body.removeChild(this.iframe);\n        window.removeEventListener('message', this.handleOnReceivedMessage, false);\n        const url = window.URL.createObjectURL(event.data.data);\n        var a = document.createElement('a');\n        document.body.appendChild(a);\n        a.style = 'display: none';\n        a.href = url;\n        a.download = this.fileName || 'untitled.pdf';\n        a.click();\n        window.URL.revokeObjectURL(url);\n      }\n    }\n  }\n\n  save() {\n    const { host, path } = this;\n    this.iframe = document.createElement('iframe');\n    this.iframe.style = 'border:0 ;position: fixed;left: 0;top: 0;z-index: 9999;cursor: wait;background-color: #fff;opacity: 0.5;';\n    this.iframe.width = '100%';\n    this.iframe.height = '100%';\n    this.iframe.src = `${host}${path}`;\n    document.body.appendChild(this.iframe);\n    window.addEventListener('message', this.handleOnReceivedMessage);\n  }\n}\n\nexport default Pdf;\n","import React, { Component } from 'react'\nimport { Bar } from 'react-chartjs-2'\n\nimport Pdf from 'ngager-pdfwriter'\n\nconst domtoimage = require('dom-to-image');\n\nfunction randomScalingFactor() {\n  return Math.floor(Math.random() * 100);\n}\n\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'Dataset 1',\n    backgroundColor: 'rgba(255, 99, 132, 0.5)',\n    borderColor: 'rgb(255, 99, 132)',\n    borderWidth: 1,\n    data: [\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor()\n    ]\n  }, {\n    label: 'Dataset 2',\n    backgroundColor: 'rgba(255, 159, 64, 0.5)',\n    borderColor: 'rgb(255, 159, 64)',\n    borderWidth: 1,\n    data: [\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor()\n    ]\n  }]\n};\nconst layout = {\n  padding: Object.assign(\n    {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }\n  )\n};\n\nconst text = '3. <b>Consultation Services</b>: The Recruitment team provides <b>consultation on </b>new and replacement positions - hiring  â€“  process, salary<b> range, </b> hehehe<br><br>   <b>availability, possible</b> challenges/risks and strategies <br>to close the roles.<br>Hahaha';\n\nexport default class App extends Component {\n  async onClick() {\n    console.log('onClick', this.props);\n    const pdf = new Pdf();\n    pdf.setFilename('test.pdf');\n    try {\n      pdf.addText(text);\n      pdf.addText(' ');\n      const dataUrl = await domtoimage.toPng(this.chart);\n      pdf.addImage(dataUrl);\n    } catch (e) {\n      console.log('ERROR', e);\n    }\n    pdf.save();\n  }\n\n  render () {\n    return (\n      <div style={{ display: 'flex', margin: 'auto', flexDirection: 'column', maxWidth: 700 }}>\n        <p dangerouslySetInnerHTML={{ __html: text }} />\n        <div\n          ref={el => {\n              this.chart = el || this.chart;\n            }}\n          style={{ display: 'flex', flex: 1, maxHeight: 400, marginBottom: 50 }}\n        >\n          <Bar\n            data={data}\n            height={400}\n            options={{\n              cornerRadius: 0,\n              layout,\n              maintainAspectRatio: false,\n              legend: {\n                display: false\n              },\n              scales: {\n                xAxes: [\n                  Object.assign(\n                    {\n                      barThickness: 40,\n                      gridLines: {\n                        display: false,\n                        offsetGridLines: false\n                      },\n                      stacked: true\n                    }\n                  )\n                ],\n                yAxes: [\n                  Object.assign(\n                    {\n                      barPercentage: 0.9,\n                      categoryPercentage: 0.55,\n                      ticks: {\n                        suggestedMin: 0,\n                        suggestedMax: 100,\n                        callback: value => {\n                          if (value % 1 === 0) {\n                            return value;\n                          }\n                          return null;\n                        }\n                      }\n                    }\n                  )\n                ]\n              }\n            }}\n          />\n        </div>\n        <button onClick={() => this.onClick()}>Download PDF</button>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}