{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["options","this","host","path","value","type","item","direction","icon","style","image","text","newContent","_replace","_split","str","array","maxCount","i","open","normalText","boldText","close","document","self","Promise","resolve","window","event","data","error","console","fileName","output","blob","url","a","html2canvas","require","randomScalingFactor","Math","floor","random","labels","datasets","label","backgroundColor","borderColor","borderWidth","layout","padding","Object","assign","left","right","top","bottom","text2","App","pdf","Pdf","addText","fontSize","color","addIcon","moveUp","indent","chart","canvas","dataUrl","toDataURL","addImage","log","save","display","margin","flexDirection","maxWidth","dangerouslySetInnerHTML","__html","paddingRight","className","ref","el","flex","maxHeight","marginBottom","height","cornerRadius","maintainAspectRatio","legend","scales","xAxes","barThickness","gridLines","offsetGridLines","stacked","yAxes","barPercentage","categoryPercentage","ticks","suggestedMin","suggestedMax","callback","onClick","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1ff286fb.chunk.js","sourcesContent":["/* eslint-disabled: 1 */\n/* eslint class-methods-use-this: 0 */\n/* eslint new-parens: 0 */\n/* eslint semi: [\"error\", \"always\"] */\n// import jsPDF from 'jspdf';\n// import _isNumber from 'lodash/isNumber';\nimport _replace from 'lodash/replace';\nimport _split from 'lodash/split';\n\nclass Pdf {\n  constructor(options = null) {\n    this.host = 'https://nclong87.github.io';\n    this.path = '/pdfwriter';\n    this.data = [];\n    this.options = options;\n  }\n  setHost(host) {\n    this.host = host;\n  }\n  setPath(path) {\n    this.path = path;\n  }\n\n  moveUp(value = 1) {\n    this.data.push({\n      type: 'move',\n      item: { direction: 'up', value }\n    });\n  }\n\n  moveDown(value = 1) {\n    this.data.push({\n      type: 'move',\n      item: { direction: 'down', value }\n    });\n  }\n\n  addIcon(icon, style = null, options = null) {\n    this.data.push({\n      type: 'icon',\n      item: { icon, style, options }\n    });\n  }\n\n  addImage(image, options = {}) {\n    this.data.push({\n      type: 'image',\n      item: { image, options }\n    });\n  }\n\n  addText(text, style = null, options = null) {\n    const newContent = _replace(text, '<br/>', '<br>');\n    _split(newContent, '<br>').forEach(str => {\n      if (str.length === 0) {\n        this.data.push({\n          type: 'text',\n          item: { text: ' ', style, options }\n        });\n        return;\n      }\n      // console.log('str', str);\n      if (str.includes('<b>')) {\n        // console.log(str);\n        const array = [];\n        let maxCount = 0;\n        for (let i = 0; i < str.length; i++) {\n          // console.log('maxCount', maxCount);\n          if (maxCount > 30) {\n            break;\n          }\n          maxCount += 1;\n          const open = str.indexOf('<b>', i);\n          if (open >= 0) {\n            const normalText = str.substr(i, open - i);\n            let boldText;\n            i = open + 3;\n            const close = str.indexOf('</b>', i);\n            if (close > i) {\n              boldText = str.substr(i, close - i);\n              i = close + 3;\n            } else {\n              boldText = str.substr(i);\n              i = str.length;\n            }\n            array.push({\n              text: normalText,\n              type: 'n'\n            });\n            array.push({\n              text: boldText,\n              type: 'b'\n            });\n          } else {\n            const normalText = str.substr(i);\n            i = str.length;\n            array.push({\n              text: normalText,\n              type: 'n'\n            });\n          }\n          // break;\n        }\n        this.data.push({\n          type: 'formatted-text',\n          item: { text: array, style, options }\n        });\n      } else {\n        this.data.push({\n          type: 'text',\n          item: { text: str, style, options }\n        });\n      }\n    });\n  }\n\n  output() {\n    const { host, path } = this;\n    this.iframe = document.createElement('iframe');\n    this.iframe.style = 'border:0 ;position: fixed;left: 0;top: 0;z-index: 9999;cursor: wait;background-color: #fff;opacity: 0.5;';\n    this.iframe.width = '100%';\n    this.iframe.height = '100%';\n    this.iframe.src = `${host}${path}`;\n    document.body.appendChild(this.iframe);\n    const self = this;\n    const promise = new Promise(resolve => {\n      function handleOnReceivedMessage(event) {\n        if (event.data && event.data.type) {\n          if (event.data.type === 'ready') {\n            const data = {\n              data: self.data,\n              options: self.options\n            };\n            // console.log('data', data);\n            self.iframe.contentWindow.postMessage(data, '*');\n          } else if (event.data.type === 'finish') {\n            // console.log(event.data.data);\n            resolve(event.data.data);\n            document.body.removeChild(self.iframe);\n            window.removeEventListener('message', handleOnReceivedMessage, false);\n          }\n        }\n      }\n      window.addEventListener('message', handleOnReceivedMessage);\n    });\n    return promise\n      .catch(error => {\n        console.log('ERROR', error);\n        return null;\n      });\n  }\n\n  async save(fileName = null) {\n    const blob = await this.output();\n    const url = window.URL.createObjectURL(blob);\n    var a = document.createElement('a');\n    document.body.appendChild(a);\n    a.style = 'display: none';\n    a.href = url;\n    a.download = fileName || 'untitled.pdf';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  }\n}\n\nexport default Pdf;\n","import React, { Component } from 'react'\nimport { Bar } from 'react-chartjs-2'\n\nimport Pdf from 'ngager-pdfwriter'\n\nconst html2canvas = require('html2canvas');\n\nfunction randomScalingFactor() {\n  return Math.floor(Math.random() * 100);\n}\n\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'Dataset 1',\n    backgroundColor: 'rgba(255, 99, 132, 0.5)',\n    borderColor: 'rgb(255, 99, 132)',\n    borderWidth: 1,\n    data: [\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor()\n    ]\n  }, {\n    label: 'Dataset 2',\n    backgroundColor: 'rgba(255, 159, 64, 0.5)',\n    borderColor: 'rgb(255, 159, 64)',\n    borderWidth: 1,\n    data: [\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor(),\n      randomScalingFactor()\n    ]\n  }]\n};\nconst layout = {\n  padding: Object.assign(\n    {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }\n  )\n};\n\nconst text = '3. <b>Consultation Services</b>: The Recruitment team provides <b>consultation on </b>new and replacement positions - hiring  –  process, salary<b> range, </b> hehehe<br><br>   <b>availability, possible</b> challenges/risks and strategies <br>to close the roles.<br>Hahaha';\n\nconst text2 = 'The man who knows his worth respects his fellow man because he respects himself first. He does not boast; is not self-seeking; nor does he force his personal opinion on others.';\n\nexport default class App extends Component {\n  async onClick() {\n    // console.log('onClick', this.props);\n    const pdf = new Pdf();\n    // pdf.setHost('http://localhost')\n    try {\n      pdf.addText(text, { fontSize: 12, color: '#BBBBBB' });\n      pdf.addText(' ');\n      pdf.addIcon('', { color: '#BBBBBB' });\n      pdf.moveUp();\n      pdf.addText(text2, null, { indent: 16 });\n      pdf.addText(' ');\n      const canvas = await html2canvas(this.chart);\n      const dataUrl = canvas.toDataURL();\n      // const dataUrl = await domtoimage.toPng(this.chart);\n      pdf.addImage(dataUrl);\n    } catch (e) {\n      console.log('ERROR', e);\n    }\n    // const blob = await pdf.output();\n    // console.log('blob', blob);\n    await pdf.save('test.pdf');\n  }\n\n  render () {\n    return (\n      <div style={{ display: 'flex', margin: 'auto', flexDirection: 'column', maxWidth: 700 }}>\n        <p style={{ color: '#BBBBBB' }} dangerouslySetInnerHTML={{ __html: text }} />\n        <p>\n          <i style={{ paddingRight: 6, color: '#BBBBBB' }} className='fas fa-quote-left'></i>\n           {text2}\n        </p>\n        <div\n          ref={el => {\n              this.chart = el || this.chart;\n            }}\n          style={{ display: 'flex', flex: 1, maxHeight: 400, marginBottom: 50 }}\n        >\n          <Bar\n            data={data}\n            height={400}\n            options={{\n              cornerRadius: 0,\n              layout,\n              maintainAspectRatio: false,\n              legend: {\n                display: false\n              },\n              scales: {\n                xAxes: [\n                  Object.assign(\n                    {\n                      barThickness: 40,\n                      gridLines: {\n                        display: false,\n                        offsetGridLines: false\n                      },\n                      stacked: true\n                    }\n                  )\n                ],\n                yAxes: [\n                  Object.assign(\n                    {\n                      barPercentage: 0.9,\n                      categoryPercentage: 0.55,\n                      ticks: {\n                        suggestedMin: 0,\n                        suggestedMax: 100,\n                        callback: value => {\n                          if (value % 1 === 0) {\n                            return value;\n                          }\n                          return null;\n                        }\n                      }\n                    }\n                  )\n                ]\n              }\n            }}\n          />\n        </div>\n        <button onClick={() => this.onClick()}>Download PDF</button>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}